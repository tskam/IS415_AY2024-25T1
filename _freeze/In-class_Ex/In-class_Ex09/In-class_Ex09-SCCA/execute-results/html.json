{
  "hash": "87ddc9fbc6fc2cd027669589214b3c57",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 9: Geographic Segmentation with Spatial Constrained Cluster Analysis\"\nauthor: \"Dr. Kam Tin Seong\"\ndate: \"2024-10-21\"\nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    show-notes: false\n    slide-number: true\n    show-slide-number: all\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\ndate-format: \"DD MMM YYYY\"\n---\n\n\n## Loading R packages\n\n::: columns\n::: {.column width=\"60%\"}\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, sp, tmap, sf, ClustGeo, \n               cluster, factoextra, NbClust,\n               tidyverse, GGally)\n```\n:::\n\n:::\n:::\n:::\n\n## Importing the data\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- read_rds(\"data/rds/shan_sf.rds\")\nshan_ict <- read_rds(\"data/rds/shan_ict.rds\")\nshan_sf_cluster <- read_rds(\"data/rds/shan_sf_cluster.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n:::\n\n## Conventional Hierarchical Clustering\n\n::: panel-tabset\n### Hierachical clustering\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat <- dist(shan_ict, method = 'euclidean')\nhclust_ward <- hclust(proxmat, method = 'ward.D')\ngroups <- as.factor(cutree(hclust_ward, k=6))\n```\n:::\n\n:::\n\n### Append to the geospatial data\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf, \n                         as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`) %>%\n  select(-c(3:4, 7:9)) %>%\n  rename(TS = TS.x)\n```\n:::\n\n:::\n\n### The dendrogram\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, k = 6, border = 2:5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-6-1.png){width=1152}\n:::\n:::\n\n:::\n\n### Cluster map\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Spatially Constrained Clustering: SKATER method\n\n### Step 1: Computing nearest neighbours\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sf)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Step 2: Visualising the neighbours\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=grey(.5))\npts <- st_coordinates(st_centroid(shan_sf))\nplot(shan.nb, \n     pts, \n     col=\"blue\", \n     add=TRUE)\n```\n:::\n\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-10-1.png){width=1152}\n:::\n:::\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Step 3:Computing minimum spanning tree\n\n::: panel-tabset\n#### Calculating edge costs\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n:::\n\n#### Incorporating these costs into a weights object\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n:::\n\n#### Computing MST\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <- mstree(shan.w)\n```\n:::\n\n:::\n\n#### Visualising MST\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot.mst(shan.mst, \n         pts, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n```\n:::\n\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n:::\n:::\n:::\n\n## Computing spatially constrained clusters using SKATER method\n\n::: panel-tabset\n### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nskater.clust6 <- skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n```\n:::\n\n:::\n\n### The skater tree\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-17-1.png){width=1152}\n:::\n:::\n\n\n### The code to plot skater tree\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), \n     border=gray(.5))\nplot(skater.clust6, \n     pts, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n```\n:::\n\n:::\n:::\n\n## Visualising the clusters in choropleth map\n\n::: panel-tabset\n### The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename(`skater_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n```\n:::\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Plotting the cluster maps\n\n::: panel-tabset\n#### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n```\n:::\n\n:::\n\n#### The Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-22-1.png){width=1152}\n:::\n:::\n\n:::\n\n## Spatially Constrained Clustering: ClustGeo Method\n\n::: panel-tabset\n### Computing spatial distance matrix\n\nIn the code chunk below, [`st_distance()`](https://r-spatial.github.io/sf/reference/geos_measures.html) of **sf** package is used to compute the distance matrix.\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n:::\n\n### The cluster graphs\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-24-2.png){width=960}\n:::\n:::\n\n\n### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(proxmat, distmat, \n                  range.alpha = seq(0, 1, 0.1), \n                  K=6, graph = TRUE)\n```\n:::\n\n:::\n\n### Saving clustGeo output\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups <- as.factor(cutree(clustG, k=6))\nshan_sf_clustGeo <- cbind(shan_sf, \n                          as.matrix(groups)) %>%\n  rename(`clustGeo` = `as.matrix.groups.`)\n```\n:::\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Visualising the clustGeo map\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_clustGeo, \"clustGeo\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n### Comparing cluster maps\n\n::: panel-tabset\n#### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhclust.map <- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.8, 0.6))\n\nshclust.map <- qtm(shan_sf_spatialcluster,\n                   \"skater_CLUSTER\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\nclustGeo.map <- qtm(shan_sf_clustGeo,\n                   \"clustGeo\") + \n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c(0.7, 0.6))\n\ntmap_arrange(hclust.map, shclust.map, \n             clustGeo.map,\n             asp=NA, ncol=3)\n```\n:::\n\n:::\n\n#### The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-29-1.png){width=1536}\n:::\n:::\n\n:::\n\n## Characterising the clusters\n\n::: panel-tabset\n#### The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex09-SCCA_files/figure-revealjs/unnamed-chunk-30-1.png){width=1920}\n:::\n:::\n\n\n#### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = shan_sf_clustGeo, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))\n```\n:::\n\n:::\n:::\n",
    "supporting": [
      "In-class_Ex09-SCCA_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}